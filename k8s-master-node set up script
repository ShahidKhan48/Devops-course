#!/bin/bash

set -e  # Exit on any error

# (1) Set up SSH connection and hostname
echo "Setting up SSH and configuring hostname..."
MASTER_IP="192.168.55.50"
WORKER_IPS=("192.168.55.60")
MASTER_HOSTNAME="master-node.com"
WORKER_HOSTNAMES=("worker-node1.com")

echo "Updating /etc/hosts file..."
sudo bash -c "cat >> /etc/hosts" <<EOF
$MASTER_IP $MASTER_HOSTNAME
${WORKER_IPS[0]} ${WORKER_HOSTNAMES[0]}
EOF

echo "Generating SSH keys on master node..."
ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa

for IP in $MASTER_IP "${WORKER_IPS[@]}"; do
    echo "Copying SSH key to $IP..."
    ssh-copy-id -i ~/.ssh/id_rsa.pub linux@$IP
done

echo "Testing SSH connectivity to worker nodes..."
for IP in "${WORKER_IPS[@]}"; do
    ssh -o BatchMode=yes linux@$IP echo "SSH to $IP successful!"
done

# (2) Installation of containerd
echo "Installing containerd..."
sudo yum install -y yum-utils device-mapper-persistent-data lvm2
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install -y containerd.io
sudo mkdir -p /etc/containerd
sudo containerd config default | sudo tee /etc/containerd/config.toml
sudo systemctl restart containerd
sudo systemctl enable containerd

# (3) Installation of Docker and Git
echo "Installing Docker and Git..."
sudo yum remove -y podman podman-docker
sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install -y docker-ce docker-ce-cli containerd.io git
sudo systemctl start docker
sudo systemctl enable docker

# (4) Configure firewall and disable swap
echo "Disabling firewall and swap..."
sudo systemctl stop firewalld
sudo systemctl disable firewalld
sudo swapoff -a
sudo getenforce

# (5) Configure sysctl for Kubernetes
echo "Configuring sysctl for Kubernetes networking..."
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system

# (6) Add Kubernetes repository
echo "Adding Kubernetes repository..."
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF

# (7) Install Kubernetes components
echo "Installing Kubernetes components..."
sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
sudo systemctl enable --now kubelet

# (8) Initialize Kubernetes master node
echo "Initializing Kubernetes master node..."
sudo modprobe br_netfilter
echo 'br_netfilter' | sudo tee /etc/modules-load.d/br_netfilter.conf

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward = 1
EOF
sudo sysctl --system
sudo swapoff -a
sudo kubeadm init

# (9) Configure kubectl for the master node
echo "Configuring kubectl for master node..."
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# Apply network plugin
echo "Applying Kubernetes network plugin..."
kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml

# Verify setup
kubectl get pods -n kube-system -o wide
kubectl get nodes -o wide

echo "Kubernetes setup complete!"
